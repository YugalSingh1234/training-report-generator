version: '3.8'

services:
  app:
    build: .
    container_name: training-report-generator
    restart: unless-stopped
    environment:
      - FLASK_ENV=production
      - SECRET_KEY=${SECRET_KEY}
      - DATABASE_URL=${DATABASE_URL:-sqlite:///app.db}
    volumes:
      - ./logs:/app/logs
      - ./static/uploads:/app/static/uploads
      - ./output:/app/output
      - ./word_template_1.docx:/app/word_template_1.docx:ro
      - ./word_template_2.docx:/app/word_template_2.docx:ro
      - ./word_template_3.docx:/app/word_template_3.docx:ro
      - ./word_template_4.docx:/app/word_template_4.docx:ro
      - ./word_template_5.docx:/app/word_template_5.docx:ro
    expose:
      - "5000"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    image: nginx:alpine
    container_name: training-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./static:/var/www/static
      - /etc/letsencrypt:/etc/letsencrypt:ro
    depends_on:
      - app
    networks:
      - app-network

  redis:
    image: redis:alpine
    container_name: training-redis
    restart: unless-stopped
    networks:
      - app-network
    volumes:
      - redis-data:/data

networks:
  app-network:
    driver: bridge

volumes:
  redis-data:
